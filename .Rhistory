# plot effect sizes and reproducibility in brain space.
library(ggseg)
plot_data_all = read.csv('./ggseg.obs.csv')
plot_col = 'Thickness..Effect'
plot_data = data.frame(
area = as.character(unlist(plot_data_all['area'])),
hemi = as.character(unlist(plot_data_all['hemi'])),
effect = as.double(unlist(plot_data_all[plot_col])),
stringsAsFactors = FALSE)
ggseg(mapping=aes(fill=area), position = 'stacked', show.legend=F,
colour='black', size=.3) +
ggtitle('Title text')
ggseg(data=plot_data,
atlas='dkt',
#position = posi_input,
#view = view_input,
#hemisphere = hemi_input,
#colour = enigma_line_color,
#size = input$enigma_line_size,
#plot.areas = plot_area_input,
#show.legend = input$enigma_legend,
mapping=aes(fill=effect)) +
#  pscale_fill +
theme_void()
ggseg(mapping=aes(fill=area), position = 'stacked', show.legend=F,
colour='black', size=.3) +
ggtitle('Title text')
ggseg(data=plot_data,
atlas='dkt',
mapping=aes(fill=effect)) +
theme_void()
ggseg(data=plot_data,
atlas='dkt',
mapping=aes(fill=effect))
?ggseg
ggseg(.data=plot_data,
atlas='dkt',
mapping=aes(fill=effect)) +
theme_void()
ggseg(.data=plot_data,position = 'stacked',
atlas='dkt',
mapping=aes(fill=effect)) +
theme_void()
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt',
mapping=aes(fill=effect)) +
theme_void()
pscale_fill = scale_fill_gradient(low = "red", high = "yellow", name = 'viewer_legend',
limits = c(0, 1))
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt',
mapping=aes(fill=effect)) +
pscale_fill +
theme_void()
shiny::runApp('~/ownCloud/Codes/obsbrain')
as.character(unlist(plot_data_all['area']))
as.character(unlist(plot_data_all['hemi']))
as.double(unlist(plot_data_all[plot_col]))
plot_data
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt',
mapping=aes(fill=effect)) +
pscale_fill +
theme_void()
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt', hemi='lh',
mapping=aes(fill=effect)) +
pscale_fill +
theme_void()
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt', hemi='left',
mapping=aes(fill=effect)) +
pscale_fill +
theme_void()
plot_data = data.frame(
area = as.character(unlist(plot_data_all['area'])),
hemi = gsub('lh','left',as.character(unlist(plot_data_all['hemi']))),
effect = as.double(unlist(plot_data_all[plot_col])),
stringsAsFactors = FALSE)
#ggseg(mapping=aes(fill=area), position = 'stacked', show.legend=F,
#      colour='black', size=.3) +
#      ggtitle('Title text')
pscale_fill = scale_fill_gradient(low = "red", high = "yellow", name = 'viewer_legend',
limits = c(0, 1))
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt', hemi='left',
mapping=aes(fill=effect)) +
pscale_fill +
theme_void()
pscale_fill = scale_fill_gradient(low = "red", high = "yellow", name = 'viewer_legend',
limits = c(0, 0.6))
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt', hemi='left',
mapping=aes(fill=effect)) +
pscale_fill +
theme_void()
# plot effect sizes and reproducibility in brain space.
library(ggseg)
plot_data_all = read.csv('./ggseg.obs.csv')
# Specify the column of interet, and color ranges below
plot_col = 'Thickness..Effect'
scale_min = 0
scale_max = 1
plot_data = data.frame(
area = as.character(unlist(plot_data_all['area'])),
hemi = gsub('lh','left',as.character(unlist(plot_data_all['hemi']))),
effect = as.double(unlist(plot_data_all[plot_col])),
stringsAsFactors = FALSE)
pscale_fill = scale_fill_gradient(low = "red", high = "yellow", name = 'viewer_legend',
limits = c(scale_min, scale_max))
ggseg(.data=plot_data,position = 'stacked',show.legend=F,
atlas='dkt', hemi='left',
mapping=aes(fill=effect)) +
pscale_fill +
theme_void()
